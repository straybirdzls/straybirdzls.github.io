<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Straybird's Blog]]></title>
  <link href="http://straybirdzls.github.io/atom.xml" rel="self"/>
  <link href="http://straybirdzls.github.io/"/>
  <updated>2014-11-01T19:38:55+08:00</updated>
  <id>http://straybirdzls.github.io/</id>
  <author>
    <name><![CDATA[Straybird]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[柴静－看见]]></title>
    <link href="http://straybirdzls.github.io/blog/2014/11/01/chuaijing/"/>
    <updated>2014-11-01T18:28:50+08:00</updated>
    <id>http://straybirdzls.github.io/blog/2014/11/01/chuaijing</id>
    <content type="html"><![CDATA[<h3>a</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Objective-C单例模式之ARC+GCD实现]]></title>
    <link href="http://straybirdzls.github.io/blog/2014/10/28/arc/"/>
    <updated>2014-10-28T19:30:43+08:00</updated>
    <id>http://straybirdzls.github.io/blog/2014/10/28/arc</id>
    <content type="html"><![CDATA[<p>单例模式是什么，这里姑且不谈，只谈谈ARC+GCD实现下单例模式比较特殊和受争议的点。</p>

<p>首先看一个ARC+GCD实现：</p>

<pre><code>@interface Singleton : NSObject     
+ (Singleton *)sharedInstance;     
@end     

@implementation Singleton     
static  Singleton *sharedInstance = nil ;             
+ (Singleton *) sharedInstance           
{      
    static dispatch_once_t onceToken;  // 锁      
    dispatch_once (&amp; onceToken, ^ {     // 最多调用一次        
    sharedInstance = [[self alloc] init];         
    });      
    return  sharedInstance;            
}        
@end       
</code></pre>

<p>这个实现很简单，但是并不能防止用户通过[[Singleton alloc]init]创建多个实例，通过小小的测试即可：</p>

<pre><code>Singleton *signleton1= [Singleton sharedInstance];       
NSLog(@"singleton1 is %@",signleton1);       
Singleton *signleton2= [[Singleton alloc]init];       
NSLog(@"singleton2 is %@",signleton2);       
</code></pre>

<p>可以看出多个实例被创建出来了。</p>

<p>怎么防止这一点呢？我们需要注意的几点：<br/>
1.Objective-c并不像C++那样，可以直接将构造函数设成private，使外部不能调用<br/>
2.只能考虑在alloc分配内存的时候把路给堵死<br/>
3.alloc中实际上调用了allocWithZone:，就算把alloc堵死了，也不能防止allocWithZone被用户直接调用<br/>
&ndash;>>所以我们必须通过allocWithZone将用户堵死</p>

<p>参考<a href="" title="https://developer.apple.com/legacy/library/documentation/Cocoa/Conceptual/CocoaFundamentals/CocoaObjects/CocoaObjects.html#//apple_ref/doc/uid/TP40002974-CH4-SW32">非ARC的实现</a>，我们很容易写出如下所示的代码：</p>

<pre><code>+(instanceType)allocWithZone:(struc _NZone)zone  
{  
    return [self sharedInstance];  
}    
</code></pre>

<p>但一运行，会发现程序hang住了。分析程序可知，程序在block中block住了。同样考虑到线程安全，allocWithZone的代码应该这样写：</p>

<pre><code>+(instanceType)allocWithZone:(struc _NZone)zone  
{   
    static dispatch_once_t onceToken;  
    dispatch_once(&amp;onceToken,^{  
    sharedInstance = [super allocWithZone:zone];
    });  
    return sharedInstance;   
}   
</code></pre>

<p>再运行之前的测试代码，这回单例只有一个了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[成长悄然来临]]></title>
    <link href="http://straybirdzls.github.io/blog/2014/10/22/title/"/>
    <updated>2014-10-22T17:36:54+08:00</updated>
    <id>http://straybirdzls.github.io/blog/2014/10/22/title</id>
    <content type="html"><![CDATA[<p>今天终于成功在github上开通个人博客了，主要是想记录生活和学习。但今天只谈生活，不谈学习。</p>

<h3>序</h3>

<p>不知不觉中已经在杭州待了1年半了，回想起，似乎大部分时光都过得很简单。最近时常有种长大了，不再是小孩子了的感觉，但内心却是无比地抗拒，想永远地当个孩子，想永远无忧无虑，永远不知道伤心，难过，孤独是什么滋味。但就如同突然开始在意起自己地长相，突然开始明白人与人的差距一样，成长就是这样，它悄然来袭，给你一个措手不及。</p>

<h3>成长之痛</h3>

<p>我已不记得成长这一瞬间是什么时候降临的，只记得，当看到公园里的孩子嬉戏着的时候，我知道我长大了；当给家里打电话只报喜不报忧的时候，我知道我长大了；当处在城市之中，看着身边的高达大厦，明白了为什么每个人都为了房子奋斗的时候，我知道我长大了；当内心里非常难过，但却发现无法言说，只等到一切尘埃落定，再云轻风淡地与人提之时，我知道我长大了；当被人爽约时，不再急躁处理，而是拼命地换位思考，最后一笑了之地时候，我知道我长大了；当对待别人的要求和期待越来越低地时候，我知道我长大了。</p>

<p>这种时刻回想起来实在太多，所以很多时候我也真的以为我是一个大人了，可以成熟稳重地处理很多事情，可以一个人肩负一片天，可发现一切都没那么简单。否则为什么在夜深人静地时候，会觉得无比地孤独？为什么在伤心难过绝望的时候，会不停地问自己，当初为什么选择来到这里，又为什么要坚持，为什么不回到父母身旁呢？为什么会时常觉得自己不属于这里，甚至不属于这个世界呢？为什么在前进的道路上却又总是犹豫不决，甚至怀疑当前所作的努力究竟有没有价值？</p>

<h3>成长之领悟</h3>

<p>其实这些问题，不出3天就会重复问自己，有时候甚至一天问自己几遍，有时候这一刻觉得自己知道答案，到下一刻又被自己推翻。也有很多人会说，人生就是自己的选择，一切的一切都是自主选择的结果。我也这么告诉自己，既然选择了，那么就要承担起带来的后果，如果能够接受半路落荒而逃，那也没问题。但每次想想前面的路，也许还是会有很多不开心，很多孤独，很多无助甚至绝望，但相比转弯就有的轻松之路，父母的庇佑，亲戚朋友的陪伴，没有压力的生活，我却总是会好不犹豫地选择前方，的确，相比看得见的未来，看不见的未来是更有吸引力的。也许有一天觉得累了倦了，觉得一切都没意义了，觉得人生的真谛在于平淡的幸福，那至少也不后悔自己曾经坚持过。对于现在的我而言，自己选择的路，跪着也要走完!</p>

<h3>尾声</h3>

<p>其实自己也不知道自己到底想写些啥，一开始半天憋不出来一个字，但又突然间行云流水，也许很多东西憋在心里太久了，很多话也许讲出來甚至写出来，能给自己一点力量，能让自己继续前行。如果幸运之中能有读者能看到我的博客，也希望能给你们带来力量。</p>
]]></content>
  </entry>
  
</feed>
